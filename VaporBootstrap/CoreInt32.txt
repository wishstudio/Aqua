class Core.Int32
{
	public static function ToString(int32 number) -> Core.String
	{
		if (number == -2147483648)
			return "-2147483648";
		/* -2147483647: length is 11 */
		int buffer = Core.Native.Memory::AllocateMemory(22);
		int32 n = Core.Math::Abs(number), i = 22;
		do
		{
			i = i - 2;
			*(buffer + i) = [char] (n % 10 + 48); /* '0' */
			n = n / 10;
		}
		while (n > 0);
		if (number < 0)
		{
			i = i - 2;
			*(buffer + i) = [char] 45; /* '-' */
		}
		Core.String ret = Core.String::FromCharBuffer(buffer + i, (22 - i) / 2);
		Core.Native.Memory::FreeMemory(buffer);
		return ret;
	}

	/* TODO */
	public static function Parse(Core.String string) -> int32
	{
		int32 ret = 0;
		if ([int32] string[0] == '-')
		{
			for (int32 i = 1; i < string::Length; i = i + 1)
				ret = ret * 10 - ([int32] string[i] - '0');
			return ret;
		}
		else
		{
			for (int32 i = 0; i < string::Length; i = i + 1)
				ret = ret * 10 + [int32] string[i] - '0';
			return ret;
		}
	}
}
