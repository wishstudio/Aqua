namespace Core;

class StreamWriter
{
	private FileStream stream;
	private Encoding encoding;
	private int32 bufferSize, currentBufferPos;
	private uint8[] charBuffer;
	private uint8[] byteBuffer;

	public (FileStream stream, Encoding encoding)
	{
		this.stream = stream;
		this.encoding = encoding;

		bufferSize = 1024;
		charBuffer = new uint8[bufferSize];
		byteBuffer = new uint8[encoding.GetMaxByteLength(bufferSize)];

		currentBufferPos = 0;
	}

	public Dispose()
	{
		Flush();
		stream.Close();
	}

	public Write(String string)
	{
		int32 current = 0, size = string.Size;
		while (current < size)
		{
			int32 count = string.CopyTo(current, charBuffer, currentBufferPos);
			current = current + count;
			currentBufferPos = currentBufferPos + count;

			if (currentBufferPos == bufferSize || current < size)
				Flush();
		}
	}

	public Flush()
	{
		int32 byteCount = encoding.ToBytes(charBuffer, currentBufferPos, byteBuffer);
		currentBufferPos = 0;
		stream.Write(byteBuffer, byteCount);
	}
}
