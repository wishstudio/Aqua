using Core;

class Vapor
{
	public static InitVapor()
	{
		/* Initialize enumeration types */
		Token.InitToken();
		Modifier.InitModifier();
		CallingConvention.InitCallingConvention();
		Type.InitType();
		Context.InitContext();
		
		Number.InitNumber();
	}

	public static Main(String[] args)
	{
		InitVapor();

		Parser parser = new Parser();
		for (int32 i = 0; i < args.Length - 1; i = i + 1)
			try
				parser.Parse(args[i]);
			catch (CompilerException e)
			{
				Console.WriteLine(e.ToString());
				return;
			}

		Compiler compiler = new Compiler(parser.root, parser.classes);
		try
			compiler.Compile();
		catch (CompilerException e)
		{
			Console.WriteLine(e.ToString());
			return;
		}

		FileStream outFS = new FileStream(args[args.Length - 1], 1);
		StreamWriter out = new StreamWriter(
			outFS,
			new Encoding(65001)
		);
		for (int32 i = 0; i < compiler.code.Size; i = i + 1)
		{
			out.Write([String] compiler.code[i]);
			out.Write("\r\n");
		}
		out.Dispose();
	}
}
