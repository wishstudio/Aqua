using Core;

class Hash
{
	/* Simple multimap implementation */
	private Vector keys, values;

	public ()
	{
		keys = new Vector();
		values = new Vector();
	}

	public Add(String key, Object value)
	{
		keys.Add(key);
		values.Add(value);
	}

	public Contains(String key) -> int32 found, Object value
	{
		for (int32 i = 0; i < keys.size; i = i + 1)
			if (([String] keys[i]).Equals(key))
				return 1, values[i];
		return 0, null;
	}

	public FindAll(String key) -> Vector
	{
		Vector ret = new Vector();
		for (int32 i = 0; i < keys.size; i = i + 1)
			if (([String] keys[i]).Equals(key))
				ret.Add(values[i]);
		return ret;
	}

	public static [] (Hash hash, String key) -> Object
	{
		int32 found;
		Object value;
		if ((found, value = hash.Contains(key)) > 0)
			return value;
		throw new KeyNotFoundException();
	}

	public int32 Size
	{
		get { return keys.Size; }
	}
}
