using Core;

class Stack
{
	private Vector data;
	private int32 size;

	public ()
	{
		data = new Vector();
		size = 0;
	}

	public Push(Object item)
	{
		if (size == data.Size)
			data.Add(item);
		else
			data.Set(size, item);
		size = size + 1;
	}

	public Pop() -> Object
	{
		if (size == 0)
			throw new InvalidOperationException();
		size = size - 1;
		return data[size];
	}

	public Peek() -> Object
	{
		if (size == 0)
			throw new InvalidOperationException();
		return data[size - 1];
	}

	public int32 Size
	{
		get { return size; }
	}
}
